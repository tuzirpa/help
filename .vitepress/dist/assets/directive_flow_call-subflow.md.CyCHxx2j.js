import{_ as o,c as a,a3 as l,o as t}from"./chunks/framework.DpY-CtK9.js";const c="/img/flow/call-subflow.png",r="/img/flow/call-subflow-example.png",g=JSON.parse('{"title":"调用子流程","description":"","frontmatter":{},"headers":[],"relativePath":"directive/flow/call-subflow.md","filePath":"directive/flow/call-subflow.md"}'),s={name:"directive/flow/call-subflow.md"};function d(p,e,n,i,f,m){return t(),a("div",null,e[0]||(e[0]=[l('<h1 id="调用子流程" tabindex="-1">调用子流程 <a class="header-anchor" href="#调用子流程" aria-label="Permalink to &quot;调用子流程&quot;">​</a></h1><p>用户主流程触发子流程，子流程执行完毕后，主流程继续执行。</p><p><img src="'+c+`" alt="alt call-subflow" data-fancybox="gallery"></p><p><strong>子流程名称</strong></p><pre><code>子流程名称: 用于调用的子流程的唯一标识，在编辑器中选择子流程右击选择复制流程名称即可。
</code></pre><p><strong>参数</strong></p><pre><code>子流程参数: 子流程的输入参数，可以传递给子流程。
</code></pre><p><strong>返回值</strong></p><pre><code>子流程返回值: 子流程的输出参数，可以获取子流程的执行结果。
</code></pre><h1 id="使用示例" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例" aria-label="Permalink to &quot;使用示例&quot;">​</a></h1><p><img src="`+r+'" alt="alt call-subflow" data-fancybox="gallery"></p><p>此示例中，主流程创建了<code>Map对象</code>设置了<code>名称</code>和<code>年龄</code>，并将其作为参数传递给子流程<code>子流程</code>，子流程给 Map 对象增加了<code>毕业学校</code>后返回，主流程继续执行。</p>',12)]))}const b=o(s,[["render",d]]);export{g as __pageData,b as default};
