import{_ as e,c as r,a3 as a,o as d}from"./chunks/framework.DpY-CtK9.js";const u=JSON.parse('{"title":"指令名称：开始监听网页请求","description":"","frontmatter":{},"headers":[],"relativePath":"directive/web/http/listenRequest.md","filePath":"directive/web/http/listenRequest.md"}'),l={name:"directive/web/http/listenRequest.md"};function i(s,t,h,o,n,b){return d(),r("div",null,t[0]||(t[0]=[a('<h1 id="指令名称-开始监听网页请求" tabindex="-1">指令名称：开始监听网页请求 <a class="header-anchor" href="#指令名称-开始监听网页请求" aria-label="Permalink to &quot;指令名称：开始监听网页请求&quot;">​</a></h1><h2 id="指令说明-在网页-browserpage-中开始监听-url-的资源请求-过滤-filtertype-类型资源-并返回监听对象-listenerobj-。备注-如果监听期间有多个请求满足条件-则返回只匹配第一个符合条件的请求。" tabindex="-1">指令说明：在网页${browserPage}中开始监听${url}的资源请求，过滤${filterType}类型资源，并返回监听对象${listenerObj}。备注：如果监听期间有多个请求满足条件，则返回只匹配第一个符合条件的请求。 <a class="header-anchor" href="#指令说明-在网页-browserpage-中开始监听-url-的资源请求-过滤-filtertype-类型资源-并返回监听对象-listenerobj-。备注-如果监听期间有多个请求满足条件-则返回只匹配第一个符合条件的请求。" aria-label="Permalink to &quot;指令说明：在网页$\\{browserPage\\}中开始监听$\\{url\\}的资源请求，过滤$\\{filterType\\}类型资源，并返回监听对象$\\{listenerObj\\}。备注：如果监听期间有多个请求满足条件，则返回只匹配第一个符合条件的请求。&quot;">​</a></h2><h2 id="指令输入" tabindex="-1">指令输入： <a class="header-anchor" href="#指令输入" aria-label="Permalink to &quot;指令输入：&quot;">​</a></h2><table tabindex="0"><thead><tr><th>参数名</th><th>参数lebel</th><th>参数类型</th><th>参数填写说明</th></tr></thead><tbody><tr><td>browserPage</td><td>网页对象</td><td>variable</td><td></td></tr><tr><td>url</td><td>资源路径Url</td><td>string</td><td></td></tr><tr><td>method</td><td>请求方法</td><td>string</td><td></td></tr><tr><td>filterType</td><td>筛选资源类型</td><td>string</td><td></td></tr></tbody></table><h2 id="指令输出" tabindex="-1">指令输出： <a class="header-anchor" href="#指令输出" aria-label="Permalink to &quot;指令输出：&quot;">​</a></h2><table tabindex="0"><thead><tr><th>参数名</th><th>参数lebel</th><th>参数类型</th><th>参数填写说明</th></tr></thead><tbody><tr><td>listenerObj</td><td>监听对象</td><td>web.listenerObj</td><td></td></tr></tbody></table>',6)]))}const p=e(l,[["render",i]]);export{u as __pageData,p as default};
