import{_ as r,c as o,j as e,o as a}from"./chunks/framework.DpY-CtK9.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"directive/web/pageScreenshotClipboard.md","filePath":"directive/web/pageScreenshotClipboard.md"}'),l={name:"directive/web/pageScreenshotClipboard.md"};function p(s,t,n,i,c,d){return a(),o("div",null,t[0]||(t[0]=[e("p",null,"import { Page } from 'puppeteer-core'; import os from 'os'; import { DirectiveTree } from '../types';",-1),e("p",null,"export const config: DirectiveTree = { name: 'web.pageScreenshotClipboard', icon: 'icon-web-create', displayName: '页面中元素截图至剪贴板', comment: '在页面${browserPage}中选中元素${selector}，并对其进行截图至剪贴板', inputs: { browserPage: { name: 'browserPage', value: '', display: '', type: 'variable', addConfig: { label: '标签页对象', type: 'variable', filtersType: 'web.page', autoComplete: true } }, selector: { name: 'selector', value: '', display: '', type: 'string', addConfig: { label: 'css选择器', placeholder: '不填写则默认截取整个页面', type: 'string', defaultValue: '', tip: '不填写则默认截取整个页面' } } },",-1),e("pre",null,[e("code",null,`outputs: {}
`)],-1),e("p",null,"};",-1),e("p",null,"export const impl = async function ({ browserPage, selector }: { browserPage: Page; selector: string; }) { const tmpFile = os.tmpdir() + '/' + new Date().getTime() + '.png'; if (selector) { const fileElement = await browserPage.waitForSelector(selector); if (fileElement) { await fileElement.screenshot({ type: 'png', path: tmpFile }); } } else { await browserPage.screenshot({ fullPage: true, type: 'png', path: tmpFile }); }",-1),e("pre",null,[e("code",null,`console.log('截图保存成功！');
`)],-1),e("p",null,"};",-1)]))}const u=r(l,[["render",p]]);export{g as __pageData,u as default};
